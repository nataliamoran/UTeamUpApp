PHASE 2
TEAM 17
--------------------
DEPLOYED APP URL: https://radiant-reef-20457.herokuapp.com/

--------------------
DATABASE OVERVIEW

DATABASE: UTeamUp
Collections:
--- auths
--- profiles
--- teams
--- users
--- images

--------------------
CONFIG
--- To use the app locally update BASE_URL and SERVER_URL in 'u_team_up_app/src/config.js' file:
    (1) Uncomment lines 6-7
    (2) Comment out lines 2-3

--------------------
ROUTES OVERVIEW

NOTE: Tokens can be found in Collection 'auths'

--- AUTH
    --- SIGNUP
        POST /auth/signup
        Body: { username, password }
        Successful Response: 
            Status 201
        Failed Response:
            Status 400, with { error }
    --- LOGIN
        POST /auth/login to get a token (has an expire time of 4 hours)
        Body: { username, password }
        Successful Response: 
            Status 201, with { type, _id, token, expireDate }
        Failed Response:
            Status 401, if the username or password is wrong.
            Status 500, if server failed to generate a token.
        After logging in, follow-up requests need to send a header `Authorization:
        Bearer XXXXXXXX` or include { token: "XXXXXXXX" } in request body, where
        XXXXXXXX is the token obtained, to maintain log-in status.
    --- REVOKE TOKEN
        POST /auth/revoke to revoke a token (logout)
        Body: { tokenToRevoke }
        Successful Response:
            Status 204
        Failed Response:
            Status 401, if not logged in (or the token has already expired)
            Status 404, if there is no such token
            Status 400, if tokenToRevoke is not specified.
    --- CHECK TOKEN VALIDITY
        GET /auth/check to check whether the token is still valid
        Successful Response:
            Status 204
        Failed Response:
            Status 401, if the token is not valid

--- USERS
    --- SEARCH USER
        GET /api/users
        GET /api/users/relaxed-filter
    --- GET USER PROFILE
        GET /api/user
    --- CHANGE USER PROFILE
        PUT /api/user
    --- DELETE USER (ADMIN ONLY)
        DELETE /api/user

--- TEAM
    --- CREATE TEAM
        POST route to create a new team: /api/teams
        Body:
        {
        	"token": String,
            "university": String,
            "course": String,
            "description": String
        }
        Successful Response:
             Status 201, Team
        Failed Response:
             Status 400, with { error }
             Status 401, if the token is not valid
    --- GET ALL TEAMS
        GET route to get all teams: /api/teams
        Body: no body
        Successful Response:
              Teams
        Failed Response:
              Status 500, with { error }
    --- GET TEAM BY ID
        GET route to get a team by its ID: /api/teams/id
        Body: no body
        Successful Response:
            Team
        Failed Response:
            Status 500, with { error }
            Status 404, if team is not found
    --- DELETE TEAM
        DELETE route to delete a team by its ID: /api/teams/id
        Body:
                {
                	"token": String
                }
         Successful Response:
                     Status 204
         Failed Response:
                     Status 400, with { error }
                     Status 401, if the token is not valid
                     Status 404, if team is not found
    --- UPDATE TEAM
        PATCH route to update a team by its ID: /api/teams/id
        Body:
            {
            	"university": String,
                "course": String,
                "description": String,
                "token": String
            }
        Successful Response:
                        Team
        Failed Response:
                        Status 400, with { error }
                        Status 401, if the token is not valid
                        Status 404, if team is not found

--- ADMIN (ADMINS ONLY)
    --- GET ALL ADMINS
        GET /api/admins
    --- GET ADMIN BY USERNAME
        GET /api/admin
    --- CREATE ADMIN
        POST /api/admin
    --- DELETE ADMIN
        DELETE /api/admin

--------------------
USERS
(1) username: user
    password: user

(2) username: user2
    password: user2

(3) username: user3
    password: user3

ADMINS
(1) username: admin
    password: admin

--------------------
APPLICATION USAGE GUIDE - USER
- Sign up page
    - Users can create their accounts in this page with a unique username

- Login page
    - Users can log in to their accounts by typing in their username and password

- Home page (also Search teams page)
    - Create teams
        - Users can create new teams by 1) providing the University name, Course
          name, and team Description, 2) clicking the "CREATE" button.
        - If the team is successfully created, the user will see a "New team
          was successfully created!" message on the right of the "CREATE"
          button and the new team on the bottom of the page.
    - Search teams
        - Input search parameters to 'University' and/or  'Course' fields
          and press 'Search'.
        - For a student to limit the search to her/his teams only,
          check the checkbox 'search my teams only'.
        - Teams, where the student user is a member, have the green button 'Open';
          other teams have the red button 'Join'.

- Your Profile page
    - Users can provide and change their personal data in this page after
      logging in by clicking on the "Edit your profile" button located in the
      bottom right of the page.
    - To change the profile picture click '"Edit your profile' and then 'Choose File'
      ('Choose File' button is located near the profile image). After the picture is chosen,
      click 'Upload profile picture' button and then 'Save' button.

- Your Inbox page
    - The navigation bar will show the number of unread messages, if the current
      user has any.
    - Unread messages are with yellow background. Click on a message to mark it
      as read.

- Your appointments page
    - Users can see the events of all the teams they are in.
      The events' names are prefixed by the course name of that team.

- Your applications page
    - When the user submit an application to a team, it will show up in this
      page along with the application status.
    - Users can withdraw the application with a pending status by clicking on
      the "WITHDRAW" button

- Search students page
    - Users can search by name, university, and course. The search is a case-
      insensitive `String.prototype.includes` search.
    - To view a student profile, click on the profile picture or name of that
      student. When you open the student's profile, you can leave a review for this
      student - type in the review and press 'Add' button.

- Team page
    - Edit team profile
        Team members can edit their team profile including the team description,
        remove team members, create and remove quiz questions, change team
        status to 'Stop accepting applications', and delete the team.
    - Team calendar
        Users can check and add events to the team.
        When a team event is added, a message is sent to the team's members.
    - Applications
        Team members can view each application by clicking the button 'Open'.
        To accept the application click 'Accept' - the applicant will be
        added to the team, otherwise click 'Reject'. In both cases the
        applicant will receive a message with the application update.

--------------------
APPLICATION USAGE GUIDE - ADMIN
- Admin Dashboard
    - Add and remove admins. Pretty self-documenting.

- Manage Students
    - On search students page, search for students and there will be a remove
      button under each one. Click to remove that student.

- Manage Teams
    - Team creation works the same as for the student user,
      except for the admin user not being added to team members.
    - To add/remove team members or delete the team, open the team page
      and click 'Edit team profile' button.

--------------------
PLEASE NOTE:

--- One of out team members dropped the course a week before the deadline. We contacted the instructor and Mark approved
dropping/trimming functionality that our ex-team member worked on.

FUNCTIONALITY DROPPED:
--- Team Membership Invitations
--- Merging University/Courses names/codes
--- Downloading teams data to .csv file
